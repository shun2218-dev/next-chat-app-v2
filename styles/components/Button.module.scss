@use "../config/variables" as var;
@use "../config/mixin" as mix;

.filled {
  border: none;
  background-color: transparent;
  &.primary {
    color: var.$primary;
    @include mix.hoverColor(darken(var.$primary, 20));
    @include mix.disabledStyle(var.$primary);
  }
  &.transparent {
    color: var.$primary;
    @include mix.hoverColor(darken(var.$primary, 40));
    @include mix.disabledStyle(var.$primary);
  }
}

.contained {
  border: none;
  box-sizing: border-box;
  &.primary {
    color: var.$secondary;
    background-color: var.$primary;
    background-image: linear-gradient(
      135deg,
      var.$font-color 50%,
      transparent 50%
    );
    background-position: 100%;
    background-size: 300%;
    transition: background 500ms ease-in-out, color 500ms 100ms ease-in-out;
    @include mix.hoverColor(lighten(var.$font-color, 60)) {
      background-position: 0;
    }
    @include mix.disabledStyle(var.$font-color) {
      background-color: rgba($color: var.$font-color, $alpha: 0.5);
      background-image: none;
    }
  }
  @media screen and (max-width: 600px) {
    height: 32px !important;
  }
}

.outlined {
  background-color: transparent;
  &.primary {
    color: var.$primary;
    border: 2px solid var.$primary;
    @include mix.hoverStyle(
      darken(var.$primary, 40),
      2px solid darken(var.$primary, 40)
    );
    @include mix.disabledStyle(var.$primary) {
      border: 2px solid rgba(var.$primary, 0.5);
    }
  }
  &.transparent {
    color: var.$font-color;
    border: 2px solid var.$font-color;
    @include mix.hoverStyle(
      darken(var.$font-color, 40),
      2px solid darken(var.$font-color, 40)
    );
    @include mix.disabledStyle(var.$font-color) {
      border: 1px solid rgba(var.$font-color, 0.5);
    }
  }
  &.error {
    color: var.$error;
    border: 2px solid var.$error;
    @include mix.hoverStyle(
      lighten(var.$error, 20),
      2px solid lighten(var.$error, 20)
    );
    @include mix.disabledStyle(var.$error) {
      border: 1px solid rgba(var.$error, 0.5);
    }
  }
  &.success {
    color: var.$success;
    border: 2px solid var.$success;
    @include mix.hoverStyle(
      lighten(var.$success, 20),
      2px solid lighten(var.$success, 20)
    );
    @include mix.disabledStyle(var.$success) {
      border: 1px solid rgba(var.$success, 0.5);
    }
  }
}

.fullWidth {
  width: 100%;
}

.button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  font-size: 0.75rem;
  font-weight: bold;
  @media screen and (max-width: 600px) {
    font-size: 0.6rem;
    gap: 5px;
  }
}

.buttonLink {
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 0.75rem;
  @media screen and (max-width: 600px) {
    font-size: 0.6rem;
    gap: 5px;
  }
}

.header {
  margin-left: 20px;
  @media screen and (max-width: 1000px) {
    margin-left: 5px;
    box-sizing: border-box;
  }
}
